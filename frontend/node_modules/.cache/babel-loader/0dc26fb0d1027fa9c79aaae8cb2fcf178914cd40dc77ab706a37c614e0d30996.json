{"ast":null,"code":"// api.js - Updated for Flask server with /api routes\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://143.244.133.125:5000';// Flask server on port 5000\nconst AUTH_HEADER='Basic '+btoa('admin:supersecret');class ApiService{constructor(){let baseURL=arguments.length>0&&arguments[0]!==undefined?arguments[0]:API_BASE_URL;this.baseURL=baseURL;}async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=`${this.baseURL}${endpoint}`;const config={headers:{'Content-Type':'application/json','Authorization':AUTH_HEADER,...options.headers},...options};try{const response=await fetch(url,config);if(!response.ok){throw new Error(`API Error: ${response.status} - ${response.statusText}`);}return await response.json();}catch(error){console.error(`API request failed for ${endpoint}:`,error);throw error;}}async getDashboardData(){try{const flaskData=await this.request('/api/dashboard-data');// Flask server returns data in the correct format already\nreturn flaskData;}catch(error){console.error('Dashboard data fetch failed:',error);return this.getFallbackData();}}// Keep this method for fallback scenarios\ntransformFlaskData(flaskData){// This method is no longer needed as Flask returns the correct format\n// But keeping it for compatibility\nreturn flaskData;}getFallbackData(){return{active_sessions_count:0,total_users:0,connection_status:\"disconnected\",users:[],active_sessions:[],stats:{total_users:0,active_sessions:0,total_recordings:0,online_users:0},last_updated:new Date().toISOString()};}async startListening(userId){return{status:\"success\",message:`Started monitoring device ${userId}`,session_id:`mock_${userId}_${Date.now()}`,user_id:userId,location:{lat:6.5244,lng:3.3792,source:\"mock\"}};}async stopListening(userId){return{status:\"success\",message:`Stopped monitoring device ${userId}`,session_id:`mock_${userId}_${Date.now()}`,duration_minutes:0};}async getLatestAudio(userId){try{const flaskData=await this.request('/api/dashboard-data');const deviceUploads=flaskData.filter(u=>u.device_id===userId);if(deviceUploads.length>0){const latest=deviceUploads[0];return{user_id:userId,audio_url:`${this.baseURL}/api/uploads/${latest.audio_file}`,duration:0,recorded_at:latest.timestamp,file_size:0};}else{throw new Error(\"No audio found\");}}catch(error){throw new Error(\"No audio found for this device\");}}async getUsers(){const dashboardData=await this.getDashboardData();return{users:dashboardData.users};}async getActiveSessions(){return{active_sessions:[]};}async getDashboardStats(){const dashboardData=await this.getDashboardData();return dashboardData.stats;}async getRecentRecordings(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;try{const flaskData=await this.request('/api/dashboard-data');const recordings=flaskData.slice(0,limit).map((upload,index)=>({id:`rec_${upload.device_id}_${index}`,user_id:upload.device_id,filename:upload.audio_file,duration:0,created_at:upload.timestamp,file_size:0}));return{recordings,total:recordings.length,limit};}catch(error){return{recordings:[],total:0,limit};}}async getHealth(){try{await this.request('/api/health');return{status:\"healthy\",timestamp:new Date().toISOString(),version:\"1.0.0\"};}catch(error){return{status:\"unhealthy\",timestamp:new Date().toISOString(),error:error.message};}}async getHourlyActivity(){const hours=[];const activity=[];const currentHour=new Date().getHours();for(let i=0;i<24;i++){const hour=(currentHour-23+i)%24;hours.push(`${hour.toString().padStart(2,'0')}:00`);activity.push(Math.floor(Math.random()*10)+1);}return{labels:hours,data:activity,total_today:activity.reduce((a,b)=>a+b,0),peak_hour:hours[activity.indexOf(Math.max(...activity))],last_updated:new Date().toISOString()};}async uploadRecording(userId,audioFile){const formData=new FormData();formData.append('file',audioFile);return this.request(`/api/upload/audio/${userId}`,{method:'POST',headers:{'Authorization':AUTH_HEADER},body:formData});}}const apiService=new ApiService();export default apiService;export const{getDashboardData,getDashboardStats,getUsers,startListening,stopListening,getActiveSessions,getRecentRecordings,getLatestAudio,getHourlyActivity,getHealth,uploadRecording}=apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","AUTH_HEADER","btoa","ApiService","constructor","baseURL","arguments","length","undefined","request","endpoint","options","url","config","headers","response","fetch","ok","Error","status","statusText","json","error","console","getDashboardData","flaskData","getFallbackData","transformFlaskData","active_sessions_count","total_users","connection_status","users","active_sessions","stats","total_recordings","online_users","last_updated","Date","toISOString","startListening","userId","message","session_id","now","user_id","location","lat","lng","source","stopListening","duration_minutes","getLatestAudio","deviceUploads","filter","u","device_id","latest","audio_url","audio_file","duration","recorded_at","timestamp","file_size","getUsers","dashboardData","getActiveSessions","getDashboardStats","getRecentRecordings","limit","recordings","slice","map","upload","index","id","filename","created_at","total","getHealth","version","getHourlyActivity","hours","activity","currentHour","getHours","i","hour","push","toString","padStart","Math","floor","random","labels","data","total_today","reduce","a","b","peak_hour","indexOf","max","uploadRecording","audioFile","formData","FormData","append","method","body","apiService"],"sources":["/home/opt/BUAS-Dashboard/frontend/src/services/api.js"],"sourcesContent":["// api.js - Updated for Flask server with /api routes\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://143.244.133.125:5000'; // Flask server on port 5000\n\nconst AUTH_HEADER = 'Basic ' + btoa('admin:supersecret');\n\nclass ApiService {\n  constructor(baseURL = API_BASE_URL) {\n    this.baseURL = baseURL;\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': AUTH_HEADER,\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        throw new Error(`API Error: ${response.status} - ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(`API request failed for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  async getDashboardData() {\n    try {\n      const flaskData = await this.request('/api/dashboard-data');\n      // Flask server returns data in the correct format already\n      return flaskData;\n    } catch (error) {\n      console.error('Dashboard data fetch failed:', error);\n      return this.getFallbackData();\n    }\n  }\n\n  // Keep this method for fallback scenarios\n  transformFlaskData(flaskData) {\n    // This method is no longer needed as Flask returns the correct format\n    // But keeping it for compatibility\n    return flaskData;\n  }\n\n  getFallbackData() {\n    return {\n      active_sessions_count: 0,\n      total_users: 0,\n      connection_status: \"disconnected\",\n      users: [],\n      active_sessions: [],\n      stats: {\n        total_users: 0,\n        active_sessions: 0,\n        total_recordings: 0,\n        online_users: 0\n      },\n      last_updated: new Date().toISOString()\n    };\n  }\n\n  async startListening(userId) {\n    return {\n      status: \"success\",\n      message: `Started monitoring device ${userId}`,\n      session_id: `mock_${userId}_${Date.now()}`,\n      user_id: userId,\n      location: { lat: 6.5244, lng: 3.3792, source: \"mock\" }\n    };\n  }\n\n  async stopListening(userId) {\n    return {\n      status: \"success\",\n      message: `Stopped monitoring device ${userId}`,\n      session_id: `mock_${userId}_${Date.now()}`,\n      duration_minutes: 0\n    };\n  }\n\n  async getLatestAudio(userId) {\n    try {\n      const flaskData = await this.request('/api/dashboard-data');\n      const deviceUploads = flaskData.filter(u => u.device_id === userId);\n\n      if (deviceUploads.length > 0) {\n        const latest = deviceUploads[0];\n        return {\n          user_id: userId,\n          audio_url: `${this.baseURL}/api/uploads/${latest.audio_file}`,\n          duration: 0,\n          recorded_at: latest.timestamp,\n          file_size: 0\n        };\n      } else {\n        throw new Error(\"No audio found\");\n      }\n    } catch (error) {\n      throw new Error(\"No audio found for this device\");\n    }\n  }\n\n  async getUsers() {\n    const dashboardData = await this.getDashboardData();\n    return { users: dashboardData.users };\n  }\n\n  async getActiveSessions() {\n    return { active_sessions: [] };\n  }\n\n  async getDashboardStats() {\n    const dashboardData = await this.getDashboardData();\n    return dashboardData.stats;\n  }\n\n  async getRecentRecordings(limit = 10) {\n    try {\n      const flaskData = await this.request('/api/dashboard-data');\n      const recordings = flaskData.slice(0, limit).map((upload, index) => ({\n        id: `rec_${upload.device_id}_${index}`,\n        user_id: upload.device_id,\n        filename: upload.audio_file,\n        duration: 0,\n        created_at: upload.timestamp,\n        file_size: 0\n      }));\n      return { recordings, total: recordings.length, limit };\n    } catch (error) {\n      return { recordings: [], total: 0, limit };\n    }\n  }\n\n  async getHealth() {\n    try {\n      await this.request('/api/health');\n      return {\n        status: \"healthy\",\n        timestamp: new Date().toISOString(),\n        version: \"1.0.0\"\n      };\n    } catch (error) {\n      return {\n        status: \"unhealthy\",\n        timestamp: new Date().toISOString(),\n        error: error.message\n      };\n    }\n  }\n\n  async getHourlyActivity() {\n    const hours = [];\n    const activity = [];\n    const currentHour = new Date().getHours();\n\n    for (let i = 0; i < 24; i++) {\n      const hour = (currentHour - 23 + i) % 24;\n      hours.push(`${hour.toString().padStart(2, '0')}:00`);\n      activity.push(Math.floor(Math.random() * 10) + 1);\n    }\n\n    return {\n      labels: hours,\n      data: activity,\n      total_today: activity.reduce((a, b) => a + b, 0),\n      peak_hour: hours[activity.indexOf(Math.max(...activity))],\n      last_updated: new Date().toISOString()\n    };\n  }\n\n  async uploadRecording(userId, audioFile) {\n    const formData = new FormData();\n    formData.append('file', audioFile);\n\n    return this.request(`/api/upload/audio/${userId}`, {\n      method: 'POST',\n      headers: {\n        'Authorization': AUTH_HEADER\n      },\n      body: formData\n    });\n  }\n}\n\nconst apiService = new ApiService();\n\nexport default apiService;\n\nexport const {\n  getDashboardData,\n  getDashboardStats,\n  getUsers,\n  startListening,\n  stopListening,\n  getActiveSessions,\n  getRecentRecordings,\n  getLatestAudio,\n  getHourlyActivity,\n  getHealth,\n  uploadRecording,\n} = apiService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}