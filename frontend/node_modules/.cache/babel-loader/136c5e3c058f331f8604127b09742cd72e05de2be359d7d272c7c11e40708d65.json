{"ast":null,"code":"var _jsxFileName = \"/home/opt/BUAS-Dashboard/frontend/src/components/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './AudioPlayer.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  audioUrl,\n  userID,\n  isVisible = false,\n  onClose,\n  autoPlay = false\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const [connectionStatus, setConnectionStatus] = useState('idle');\n\n  // Reset state when audioUrl changes\n  useEffect(() => {\n    if (audioUrl) {\n      setIsLoading(true);\n      setError(null);\n      setCurrentTime(0);\n      setIsPlaying(false);\n      setRetryCount(0);\n      setConnectionStatus('connecting');\n    }\n  }, [audioUrl]);\n\n  // Auto-play functionality\n  useEffect(() => {\n    if (autoPlay && audioUrl && audioRef.current) {\n      const timer = setTimeout(() => {\n        handlePlay();\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [autoPlay, audioUrl]);\n  const handleRetry = async () => {\n    if (retryCount >= 3) {\n      setError('Max retry attempts reached. Please try again later.');\n      return;\n    }\n    setRetryCount(prev => prev + 1);\n    setError(null);\n    setIsLoading(true);\n    setConnectionStatus('retrying');\n\n    // Reload the audio element\n    if (audioRef.current) {\n      audioRef.current.load();\n      try {\n        await audioRef.current.play();\n        setIsPlaying(true);\n        setConnectionStatus('connected');\n      } catch (err) {\n        console.error('Retry failed:', err);\n        setError(`Retry ${retryCount + 1} failed: ${err.message}`);\n        setConnectionStatus('error');\n      }\n    }\n    setIsLoading(false);\n  };\n  const handlePlay = async () => {\n    if (!audioRef.current) return;\n    try {\n      setIsLoading(true);\n      setConnectionStatus('connecting');\n      await audioRef.current.play();\n      setIsPlaying(true);\n      setError(null);\n      setConnectionStatus('connected');\n    } catch (err) {\n      console.error('Audio play error:', err);\n      setError(`Failed to play audio: ${err.message}`);\n      setIsPlaying(false);\n      setConnectionStatus('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handlePause = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n  const handleStop = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setIsPlaying(false);\n      setCurrentTime(0);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n      setIsLoading(false);\n    }\n  };\n  const handleSeek = e => {\n    const progressBar = e.currentTarget;\n    const clickX = e.nativeEvent.offsetX;\n    const width = progressBar.offsetWidth;\n    const newTime = clickX / width * duration;\n    if (audioRef.current) {\n      audioRef.current.currentTime = newTime;\n      setCurrentTime(newTime);\n    }\n  };\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n  const formatTime = time => {\n    if (isNaN(time)) return '00:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const handleError = () => {\n    setError('Audio file could not be loaded');\n    setIsLoading(false);\n    setIsPlaying(false);\n  };\n  const handleEnded = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n  };\n  if (!isVisible || !audioUrl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio-player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-player-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\uD83C\\uDFB5 Audio Player - User \", userID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-player-content\",\n        children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-icon\",\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"retry-btn\",\n              onClick: handleRetry,\n              children: [\"\\uD83D\\uDD04 Retry (\", retryCount, \"/3)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-btn\",\n              onClick: onClose,\n              children: \"\\u274C Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), retryCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"retry-info\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Attempt \", retryCount, \" of 3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `connection-indicator ${connectionStatus}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"connection-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"connection-text\",\n              children: [connectionStatus === 'connecting' && 'Connecting...', connectionStatus === 'connected' && 'Connected', connectionStatus === 'retrying' && 'Retrying...', connectionStatus === 'error' && 'Connection Error', connectionStatus === 'idle' && 'Ready']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            ref: audioRef,\n            src: audioUrl,\n            onTimeUpdate: handleTimeUpdate,\n            onLoadedMetadata: handleLoadedMetadata,\n            onError: handleError,\n            onEnded: handleEnded,\n            preload: \"metadata\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatTime(currentTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatTime(duration)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              onClick: handleSeek,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: duration ? `${currentTime / duration * 100}%` : '0%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audio-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-btn play-pause\",\n              onClick: isPlaying ? handlePause : handlePlay,\n              disabled: isLoading,\n              children: isLoading ? '⏳' : isPlaying ? '⏸️' : '▶️'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-btn stop\",\n              onClick: handleStop,\n              disabled: isLoading,\n              children: \"\\u23F9\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"volume-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83D\\uDD0A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"1\",\n                step: \"0.1\",\n                value: volume,\n                onChange: handleVolumeChange,\n                className: \"volume-slider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [Math.round(volume * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audio-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Source:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 20\n              }, this), \" Latest recording for User \", userID]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Duration:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 20\n              }, this), \" \", formatTime(duration)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"loading-text\",\n              children: \"Loading audio...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"YZIvrEXN+BqRNLYHcm8EfRQINBc=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioPlayer","audioUrl","userID","isVisible","onClose","autoPlay","_s","audioRef","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","volume","setVolume","isLoading","setIsLoading","error","setError","retryCount","setRetryCount","connectionStatus","setConnectionStatus","current","timer","setTimeout","handlePlay","clearTimeout","handleRetry","prev","load","play","err","console","message","handlePause","pause","handleStop","handleTimeUpdate","handleLoadedMetadata","handleSeek","e","progressBar","currentTarget","clickX","nativeEvent","offsetX","width","offsetWidth","newTime","handleVolumeChange","newVolume","parseFloat","target","value","formatTime","time","isNaN","minutes","Math","floor","seconds","toString","padStart","handleError","handleEnded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","src","onTimeUpdate","onLoadedMetadata","onError","onEnded","preload","style","disabled","type","min","max","step","onChange","round","_c","$RefreshReg$"],"sources":["/home/opt/BUAS-Dashboard/frontend/src/components/AudioPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './AudioPlayer.css';\n\nconst AudioPlayer = ({ \n  audioUrl, \n  userID, \n  isVisible = false, \n  onClose,\n  autoPlay = false \n}) => {\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const [connectionStatus, setConnectionStatus] = useState('idle');\n\n  // Reset state when audioUrl changes\n  useEffect(() => {\n    if (audioUrl) {\n      setIsLoading(true);\n      setError(null);\n      setCurrentTime(0);\n      setIsPlaying(false);\n      setRetryCount(0);\n      setConnectionStatus('connecting');\n    }\n  }, [audioUrl]);\n\n  // Auto-play functionality\n  useEffect(() => {\n    if (autoPlay && audioUrl && audioRef.current) {\n      const timer = setTimeout(() => {\n        handlePlay();\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [autoPlay, audioUrl]);\n\n  const handleRetry = async () => {\n    if (retryCount >= 3) {\n      setError('Max retry attempts reached. Please try again later.');\n      return;\n    }\n    \n    setRetryCount(prev => prev + 1);\n    setError(null);\n    setIsLoading(true);\n    setConnectionStatus('retrying');\n    \n    // Reload the audio element\n    if (audioRef.current) {\n      audioRef.current.load();\n      try {\n        await audioRef.current.play();\n        setIsPlaying(true);\n        setConnectionStatus('connected');\n      } catch (err) {\n        console.error('Retry failed:', err);\n        setError(`Retry ${retryCount + 1} failed: ${err.message}`);\n        setConnectionStatus('error');\n      }\n    }\n    setIsLoading(false);\n  };\n\n  const handlePlay = async () => {\n    if (!audioRef.current) return;\n    \n    try {\n      setIsLoading(true);\n      setConnectionStatus('connecting');\n      await audioRef.current.play();\n      setIsPlaying(true);\n      setError(null);\n      setConnectionStatus('connected');\n    } catch (err) {\n      console.error('Audio play error:', err);\n      setError(`Failed to play audio: ${err.message}`);\n      setIsPlaying(false);\n      setConnectionStatus('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePause = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  const handleStop = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setIsPlaying(false);\n      setCurrentTime(0);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n      setIsLoading(false);\n    }\n  };\n\n  const handleSeek = (e) => {\n    const progressBar = e.currentTarget;\n    const clickX = e.nativeEvent.offsetX;\n    const width = progressBar.offsetWidth;\n    const newTime = (clickX / width) * duration;\n    \n    if (audioRef.current) {\n      audioRef.current.currentTime = newTime;\n      setCurrentTime(newTime);\n    }\n  };\n\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n\n  const formatTime = (time) => {\n    if (isNaN(time)) return '00:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const handleError = () => {\n    setError('Audio file could not be loaded');\n    setIsLoading(false);\n    setIsPlaying(false);\n  };\n\n  const handleEnded = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n  };\n\n  if (!isVisible || !audioUrl) {\n    return null;\n  }\n\n  return (\n    <div className=\"audio-player-overlay\">\n      <div className=\"audio-player\">\n        <div className=\"audio-player-header\">\n          <h3>🎵 Audio Player - User {userID}</h3>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n\n        <div className=\"audio-player-content\">\n          {error ? (\n            <div className=\"audio-error\">\n              <span className=\"error-icon\">⚠️</span>\n              <p>{error}</p>\n              <div className=\"error-actions\">\n                <button className=\"retry-btn\" onClick={handleRetry}>\n                  🔄 Retry ({retryCount}/3)\n                </button>\n                <button className=\"close-btn\" onClick={onClose}>\n                  ❌ Close\n                </button>\n              </div>\n              {retryCount > 0 && (\n                <div className=\"retry-info\">\n                  <small>Attempt {retryCount} of 3</small>\n                </div>\n              )}\n            </div>\n          ) : (\n            <>\n              {/* Connection Status */}\n              <div className={`connection-indicator ${connectionStatus}`}>\n                <span className=\"connection-dot\"></span>\n                <span className=\"connection-text\">\n                  {connectionStatus === 'connecting' && 'Connecting...'}\n                  {connectionStatus === 'connected' && 'Connected'}\n                  {connectionStatus === 'retrying' && 'Retrying...'}\n                  {connectionStatus === 'error' && 'Connection Error'}\n                  {connectionStatus === 'idle' && 'Ready'}\n                </span>\n              </div>\n\n              {/* Hidden audio element */}\n              <audio\n                ref={audioRef}\n                src={audioUrl}\n                onTimeUpdate={handleTimeUpdate}\n                onLoadedMetadata={handleLoadedMetadata}\n                onError={handleError}\n                onEnded={handleEnded}\n                preload=\"metadata\"\n              />\n\n              {/* Progress Bar */}\n              <div className=\"progress-container\">\n                <div className=\"time-display\">\n                  <span>{formatTime(currentTime)}</span>\n                  <span>{formatTime(duration)}</span>\n                </div>\n                <div \n                  className=\"progress-bar\" \n                  onClick={handleSeek}\n                >\n                  <div \n                    className=\"progress-fill\"\n                    style={{ \n                      width: duration ? `${(currentTime / duration) * 100}%` : '0%' \n                    }}\n                  ></div>\n                </div>\n              </div>\n\n              {/* Control Buttons */}\n              <div className=\"audio-controls\">\n                <button\n                  className=\"control-btn play-pause\"\n                  onClick={isPlaying ? handlePause : handlePlay}\n                  disabled={isLoading}\n                >\n                  {isLoading ? '⏳' : isPlaying ? '⏸️' : '▶️'}\n                </button>\n                \n                <button \n                  className=\"control-btn stop\"\n                  onClick={handleStop}\n                  disabled={isLoading}\n                >\n                  ⏹️\n                </button>\n\n                <div className=\"volume-control\">\n                  <span>🔊</span>\n                  <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.1\"\n                    value={volume}\n                    onChange={handleVolumeChange}\n                    className=\"volume-slider\"\n                  />\n                  <span>{Math.round(volume * 100)}%</span>\n                </div>\n              </div>\n\n              {/* Audio Info */}\n              <div className=\"audio-info\">\n                <p><strong>Source:</strong> Latest recording for User {userID}</p>\n                <p><strong>Duration:</strong> {formatTime(duration)}</p>\n                {isLoading && <p className=\"loading-text\">Loading audio...</p>}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}