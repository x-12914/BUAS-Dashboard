{"ast":null,"code":"import React,{useState}from'react';import'./ConnectionStatus.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConnectionStatus=_ref=>{let{isConnected,lastUpdated,retryCount=0}=_ref;const[showDetails,setShowDetails]=useState(false);const getStatusInfo=()=>{if(isConnected){return{icon:'ðŸŸ¢',text:'Connected',className:'connected',description:'Real-time updates active'};}else{return{icon:'ðŸ”´',text:'Disconnected',className:'disconnected',description:retryCount>0?`Retrying... (${retryCount})`:'Connection lost'};}};const formatLastUpdated=timestamp=>{if(!timestamp)return'Never';const now=new Date();const updateTime=new Date(timestamp);const diffSeconds=Math.floor((now-updateTime)/1000);if(diffSeconds<10)return'Just now';if(diffSeconds<60)return`${diffSeconds}s ago`;if(diffSeconds<3600)return`${Math.floor(diffSeconds/60)}m ago`;return updateTime.toLocaleTimeString();};const status=getStatusInfo();return/*#__PURE__*/_jsxs(\"div\",{className:`connection-status ${status.className}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-indicator\",onClick:()=>setShowDetails(!showDetails),children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-icon\",children:status.icon}),/*#__PURE__*/_jsx(\"span\",{className:\"status-text\",children:status.text}),/*#__PURE__*/_jsx(\"span\",{className:\"status-toggle\",children:showDetails?'â–¼':'â–¶'})]}),showDetails&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Status:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:status.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Last Update:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formatLastUpdated(lastUpdated)})]}),retryCount>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Retry Attempts:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:retryCount})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Polling:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:\"Every 2 seconds\"})]})]})]});};export default ConnectionStatus;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ConnectionStatus","_ref","isConnected","lastUpdated","retryCount","showDetails","setShowDetails","getStatusInfo","icon","text","className","description","formatLastUpdated","timestamp","now","Date","updateTime","diffSeconds","Math","floor","toLocaleTimeString","status","children","onClick"],"sources":["/home/opt/BUAS-Dashboard/frontend/src/components/ConnectionStatus.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ConnectionStatus.css';\n\nconst ConnectionStatus = ({ isConnected, lastUpdated, retryCount = 0 }) => {\n  const [showDetails, setShowDetails] = useState(false);\n  \n  const getStatusInfo = () => {\n    if (isConnected) {\n      return {\n        icon: 'ðŸŸ¢',\n        text: 'Connected',\n        className: 'connected',\n        description: 'Real-time updates active'\n      };\n    } else {\n      return {\n        icon: 'ðŸ”´',\n        text: 'Disconnected',\n        className: 'disconnected',\n        description: retryCount > 0 ? `Retrying... (${retryCount})` : 'Connection lost'\n      };\n    }\n  };\n\n  const formatLastUpdated = (timestamp) => {\n    if (!timestamp) return 'Never';\n    \n    const now = new Date();\n    const updateTime = new Date(timestamp);\n    const diffSeconds = Math.floor((now - updateTime) / 1000);\n    \n    if (diffSeconds < 10) return 'Just now';\n    if (diffSeconds < 60) return `${diffSeconds}s ago`;\n    if (diffSeconds < 3600) return `${Math.floor(diffSeconds / 60)}m ago`;\n    return updateTime.toLocaleTimeString();\n  };\n\n  const status = getStatusInfo();\n\n  return (\n    <div className={`connection-status ${status.className}`}>\n      <div className=\"status-indicator\" onClick={() => setShowDetails(!showDetails)}>\n        <span className=\"status-icon\">{status.icon}</span>\n        <span className=\"status-text\">{status.text}</span>\n        <span className=\"status-toggle\">{showDetails ? 'â–¼' : 'â–¶'}</span>\n      </div>\n      \n      {showDetails && (\n        <div className=\"status-details\">\n          <div className=\"status-row\">\n            <span className=\"label\">Status:</span>\n            <span className=\"value\">{status.description}</span>\n          </div>\n          <div className=\"status-row\">\n            <span className=\"label\">Last Update:</span>\n            <span className=\"value\">{formatLastUpdated(lastUpdated)}</span>\n          </div>\n          {retryCount > 0 && (\n            <div className=\"status-row\">\n              <span className=\"label\">Retry Attempts:</span>\n              <span className=\"value\">{retryCount}</span>\n            </div>\n          )}\n          <div className=\"status-row\">\n            <span className=\"label\">Polling:</span>\n            <span className=\"value\">Every 2 seconds</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ConnectionStatus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}